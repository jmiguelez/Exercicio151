import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * NewJFrame.java
 *
 * Created on 17-mar-2014, 18:08:30
 */
/**
 *
 * @author JUANMR
 */
public class NewJFrame extends javax.swing.JFrame {
    
    public static Connection con;
    public static Usuario usuarioActual = null;

    /** Creates new form NewJFrame */
    public NewJFrame() {
        initComponents();
        setConnection();
        verEnlaces(Enlace.Etiquetados(null));
        jTextArea1.setText("");
        jButton3.setVisible(false);
        jButton4.setVisible(false);
    }
    
    public void setConnection(){
        try {
            con = DriverManager.getConnection("jdbc:mysql://localhost:3307/Exercicio_delicious","root","root");
        } catch(SQLException e){
            System.out.println(e.getLocalizedMessage());
        }
    }
    
    

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("FILTRAR ETIQUETAS");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jTextField3.setText("Introduzca o nome das etiquetas separadas por comas");

        jButton2.setText("LOGIN");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("REXISTRARSE");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("ACTUALIZAR DATOS ACCESO DO USUARIO");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel2.setText("Nome");

        jLabel3.setText("Contrasinal");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(374, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(76, 76, 76)
                                .addComponent(jButton1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(9, 9, 9)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel3)
                                                .addGap(18, 18, 18)
                                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel2)
                                                .addGap(45, 45, 45)
                                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jButton4)
                                            .addComponent(jButton3))))))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(130, 130, 130)
                        .addComponent(jButton2)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 455, Short.MAX_VALUE)
                        .addGap(74, 74, 74))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton4)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2)
                        .addGap(59, 59, 59)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)
                        .addGap(87, 87, 87))))
        );

        pack();
    }// </editor-fold>                        

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
// TODO add your handling code here:
    ArrayList<String> etiquetas = new ArrayList<String>();
        List<Enlace> enlaces;
        for (String etiqueta : jTextField3.getText().trim().replaceAll("\\s+", "").split(",")) {
            etiquetas.add(etiqueta);
        }
        verEnlaces(Enlace.Etiquetados(etiquetas));
}                                        

private void verEnlaces(List<Enlace> enlaces){

        if (enlaces.size()>0) {
            jTextArea1.setText("");
            for (Enlace e : enlaces) {
                jTextArea1.append(e.toString());
            }
        }
        else {
            jTextArea1.setText("Non se atoparon enlaces coas etiquetas sinaladas");
        }
    }

private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                         
// TODO add your handling code here:
    
        if((usuarioActual=Usuario.Existe(jTextField1.getText(), jTextField2.getText()))!=null) {
            jLabel1.setText("Usuario: " + usuarioActual.getLogin());
            verEnlaces(Enlace.Etiquetados(null));
            jButton4.setVisible(true);
            jButton2.setVisible(false);
        } else {
            jTextArea1.setText("O usuario non existe ou os datos foron mal introducidos");
            jButton3.setVisible(true);
            PreparedStatement ps = null;
        }
        
}                                        

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        PreparedStatement ps = null;
        try {
            ps = NewJFrame.con.prepareStatement("SELECT * FROM usuarios WHERE login=?", Statement.RETURN_GENERATED_KEYS);
            ps.setString(1, jTextField1.getText());
            ResultSet rs = ps.executeQuery();
            if (rs.next()){
                jTextArea1.setText("Xa existe un usuario con ese login");
            } else {
                ps = NewJFrame.con.prepareStatement("INSERT INTO usuarios VALUES (null, ?, ?)", Statement.RETURN_GENERATED_KEYS);
                ps.setString(1, jTextField1.getText());
                ps.setString(2, jTextField2.getText());
                int introducidos = ps.executeUpdate();
                jTextArea1.setText("O usuario " + jTextField1.getText() + " foi creado con éxito");
                jButton3.setVisible(false); 
            }
        } catch(SQLException e) {
            System.out.println(e.getLocalizedMessage());
        }
        
        
    }                                        

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        usuarioActual.actualizar(jTextField1.getText(), jTextField2.getText());
        jTextArea1.setText("Os datos do usuario foron actualizados");
        
        
        
        
        
    }                                        

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new NewJFrame().setVisible(true);
            }           
        });
     
    }
   
    // Variables declaration - do not modify                     
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration                   
}
class Usuario {
    private int id;
    private String login;
    private String clave;
    
    public Usuario(int id, String login, String clave) {
        this.id = id;
        this.login = login;
        this.clave = clave;
    }
    
    public static Usuario Existe(String login, String clave) {
        Usuario esta = null;
        
        try {
            
            PreparedStatement ps = NewJFrame.con.prepareStatement("SELECT * FROM usuarios WHERE login=? AND clave=?");
            ps.setString(1, login);
            ps.setString(2, clave);
            ResultSet rs = ps.executeQuery();
            if (rs.next()) {
                esta = new Usuario(rs.getInt("id"),login,clave);
            }
        } catch(SQLException e) {
            System.out.println(e.getLocalizedMessage());
        }
        
        return esta;
    }
    
    public void actualizar(String login, String clave) {
        PreparedStatement ps = null;
        try {
            ps = NewJFrame.con.prepareStatement("UPDATE usuarios SET login=?, clave=? WHERE id = ?", Statement.RETURN_GENERATED_KEYS);
            ps.setString(1, login);
            ps.setString(2, clave);
            ps.setInt(3, this.id);
            int actualizados = ps.executeUpdate();
            if (actualizados > 0) {
                ResultSet rs = ps.getGeneratedKeys();
                if (rs.next()) {
                    int key = rs.getInt(1);
                    this.setId(key);
                }
            }
            

        } catch(SQLException e) {
            System.out.println(e.getLocalizedMessage());
        }
    }
    
   
    public String getLogin() {
        return login;
    }

    public void setLogin(String login) {
        this.login = login;
    }

    public String getClave() {
        return clave;
    }

    public void setClave(String clave) {
        this.clave = clave;
    }

    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }
    
            
}

class Enlace {
    int id;
    String url;
    String titulo;
    String comentario;
    boolean privado;
    int idUsuario;
    ArrayList<String> etiquetas;
    public Enlace(int id, String url, String titulo, String comentario, boolean privado, int idUsuario) {
        this.id = id;
        this.url = url;
        this.titulo = titulo;
        this.comentario = comentario;
        this.privado = privado;
        this.idUsuario = idUsuario;
        this.etiquetas = new ArrayList<String>();
    }
    
    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public String getUrl() {
        return url;
    }

    public void setUrl(String url) {
        this.url = url;
    }

    public String getTitulo() {
        return titulo;
    }

    public void setTitulo(String titulo) {
        this.titulo = titulo;
    }

    public String getComentario() {
        return comentario;
    }

    public void setComentario(String comenurltario) {
        this.comentario = comentario;
    }

    public boolean isPrivado() {
        return privado;
    }

    public void setPrivado(boolean privado) {
        this.privado = privado;
    }

    public int getidUsuario() {
        return idUsuario;
    }

    public void setIidUsuario(int idUsuario) {
        this.idUsuario = idUsuario;
    }

    public ArrayList<String> getEtiquetas() {
        return etiquetas;
    }

    public void setEtiquetas(ArrayList<String> etiquetas) {
        this.etiquetas = etiquetas;
    }
    
    @Override
    public String toString(){
        String res = "";
        res += this.titulo + " ("+ this.url + ")\n";
        for (String etiqueta : etiquetas) {
            res += etiqueta + " ";
        }
        res += "\n\n";
        return res;
    }
    
  
    public static List<Enlace> Etiquetados(List<String> etiquetas) {
        ArrayList<Enlace> resultado = new ArrayList<Enlace>();
        String consulta1 = "SELECT * FROM enlaces WHERE ";
        
        if (NewJFrame.usuarioActual != null) {
            consulta1 += "idUsuario=" + NewJFrame.usuarioActual.getId();
        } else {
            consulta1 += "privado=0";
        }
        
        if (etiquetas!=null && !etiquetas.isEmpty()) {
            for (String etiqueta : etiquetas){
                consulta1 += " AND id IN (SELECT idEnlace FROM etiquetas WHERE etiqueta='" + etiqueta + "')";
            }
        }

        Statement st = null;
        try {
            st = NewJFrame.con.createStatement();
            ResultSet rs = st.executeQuery(consulta1);
            while (rs.next()) {
                Enlace e = new Enlace(rs.getInt("id"), rs.getString("url"), rs.getString("titulo"), rs.getString("comentario"), rs.getBoolean("privado"), rs.getInt("idUsuario"));
                resultado.add(e);
                Statement st2 = NewJFrame.con.createStatement();
                ResultSet rs2 = st2.executeQuery("SELECT etiqueta FROM etiquetas WHERE idEnlace=" + e.getId());
                ArrayList<String> palabras = new ArrayList<String>();
                while (rs2.next()) {
                    palabras.add(rs2.getString("etiqueta"));
                }
                e.setEtiquetas(palabras);
                System.out.println(e.toString());
            }

        } catch(SQLException e) {
            System.out.println(e.getLocalizedMessage());
        }

        return resultado;
    }
}

